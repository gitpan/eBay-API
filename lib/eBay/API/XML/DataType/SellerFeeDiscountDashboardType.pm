#!/usr/bin/perl

package eBay::API::XML::DataType::SellerFeeDiscountDashboardType;

use strict;
use warnings;  

##########################################################################
#
# Module: ............... <user defined location>eBay/API/XML
# File: ................. SellerFeeDiscountDashboardType.pm
# Generated by: ......... genEBayApiDataTypes.pl
# Last Generated: ....... 08/24/2008 16:44
# API Release Number: ... 579
#
##########################################################################  

=head1 NAME

eBay::API::XML::DataType::SellerFeeDiscountDashboardType

=head1 DESCRIPTION

PowerSeller discount information (e.g., to show in a Seller Dashboard).
As a PowerSeller, you can earn discounts on your monthly invoice Final Value Fees based on how well you're doing as a seller.



=head1 SYNOPSIS

=cut


=head1 INHERITANCE

eBay::API::XML::DataType::SellerFeeDiscountDashboardType inherits from the L<eBay::API::XML::BaseDataType> class

=cut

use eBay::API::XML::BaseDataType;
our @ISA = ("eBay::API::XML::BaseDataType");



my @gaProperties = ( [ 'Percent', 'xs:float', '', '', '' ]
                    );
push @gaProperties, @{eBay::API::XML::BaseDataType::getPropertiesList()};

my @gaAttributes = ( 
                    );
push @gaAttributes, @{eBay::API::XML::BaseDataType::getAttributesList()};

=head1 Subroutines:

=cut

sub new {
  my $classname = shift;
  my %args = @_;
  my $self = $classname->SUPER::new(%args);
  return $self;
}

sub isScalar {
   return 0; 
}



=head2 setPercent()

PowerSeller discount as a percentage. For example, a 5% discount is returned as 0.05.

#    Argument: 'xs:float'

=cut

sub setPercent {
  my $self = shift;
  $self->{'Percent'} = shift
}

=head2 getPercent()

  Calls: GetSellerDashboard
  Returned: Conditionally

#    Returns: 'xs:float'

=cut

sub getPercent {
  my $self = shift;
  return $self->{'Percent'};
}





##  Attribute and Property lists
sub getPropertiesList {
   my $self = shift;
   return \@gaProperties;
}

sub getAttributesList {
   my $self = shift;
   return \@gaAttributes;
}



1;   
