#!/usr/bin/perl

package eBay::API::XML::DataType::Enum::RecommendationEngineCodeType;

use strict;
use warnings;  

##########################################################################
#
# Module: ............... <user defined location>eBay/API/XML
# File: ................. RecommendationEngineCodeType.pm
# Generated by: ......... genEBayApiDataTypes.pl
# Last Generated: ....... 08/24/2008 16:44
# API Release Number: ... 579
#
##########################################################################  

=head1 NAME

eBay::API::XML::DataType::Enum::RecommendationEngineCodeType

=head1 DESCRIPTION

RecommendationEngineCodeType - Type declaration to be used by other schema.
Identifies the engines that can be used to analyze proposed listing data.
See the Developer's Guide for a list of recommendation engines that
are currently operational.



=head1 SYNOPSIS

=cut



=head1 Enums:

=cut


=head2 ListingAnalyzer

(in) Listing Analyzer engine; Returns tips related to fields
that a seller wants to specify in a listing.



=cut


use constant ListingAnalyzer => scalar('ListingAnalyzer');


=head2 SIFFTAS

(in) Reserved for internal or future use.



=cut


use constant SIFFTAS => scalar('SIFFTAS');


=head2 ProductPricing

(in) Product Pricing engine. Returns average start and sold prices
of completed items that were listed a specified product ID.



=cut


use constant ProductPricing => scalar('ProductPricing');


=head2 CustomCode

(out) Reserved for internal or future use.



=cut


use constant CustomCode => scalar('CustomCode');


=head2 SuggestedAttributes

(in) Suggested Attributes engine. Returns suggested attributes
and catalog products (for Pre-filled Item Information) that have been
used by other sellers who listed similar items in the same category.



=cut


use constant SuggestedAttributes => scalar('SuggestedAttributes');


=head2 ItemSpecifics

(in) Custom Item Specifics engine. Returns the most popular
names and values to use for custom Item Specifics based the
requested category (and the Title, if specified).



=cut


use constant ItemSpecifics => scalar('ItemSpecifics');







1;   
