#!/usr/bin/perl

package eBay::API::XML::DataType::Enum::ListingEnhancementDurationCodeType;

use strict;
use warnings;  

##########################################################################
#
# Module: ............... <user defined location>eBay/API/XML
# File: ................. ListingEnhancementDurationCodeType.pm
# Generated by: ......... genEBayApiDataTypes.pl
# Last Generated: ....... 08/24/2008 16:44
# API Release Number: ... 579
#
##########################################################################  

=head1 NAME

eBay::API::XML::DataType::Enum::ListingEnhancementDurationCodeType

=head1 DESCRIPTION

Applications should not depend on the completeness of ListingEnhancementDurationCodeType.
GetCategoryFeatures will return the complete list of feature durations for each feature
that they pertain to.
Each code in this code list specifies a number of days that a listing feature can be
active (i.e., available to increase exposure in search). The validity of a code
depends on the listing site and feature.
Call GetCategoryFeatures to determine which listing features
support each duration for the site you are using.



=head1 SYNOPSIS

=cut



=head1 Enums:

=cut


=head2 Days_1

1 day



=cut


use constant Days_1 => scalar('Days_1');


=head2 Days_2

2 Days



=cut


use constant Days_2 => scalar('Days_2');


=head2 Days_3

3 Days



=cut


use constant Days_3 => scalar('Days_3');


=head2 Days_4

4 Days



=cut


use constant Days_4 => scalar('Days_4');


=head2 Days_5

5 Days



=cut


use constant Days_5 => scalar('Days_5');


=head2 Days_6

6 Days



=cut


use constant Days_6 => scalar('Days_6');


=head2 Days_7

7 Days



=cut


use constant Days_7 => scalar('Days_7');


=head2 Days_8

8 Days



=cut


use constant Days_8 => scalar('Days_8');


=head2 Days_9

9 Days



=cut


use constant Days_9 => scalar('Days_9');


=head2 Days_10

10 Days



=cut


use constant Days_10 => scalar('Days_10');


=head2 Days_11

11 Days



=cut


use constant Days_11 => scalar('Days_11');


=head2 Days_12

12 Days



=cut


use constant Days_12 => scalar('Days_12');


=head2 Days_13

13 Days



=cut


use constant Days_13 => scalar('Days_13');


=head2 Days_14

14 Days



=cut


use constant Days_14 => scalar('Days_14');


=head2 Days_15

15 Days



=cut


use constant Days_15 => scalar('Days_15');


=head2 Days_16

16 Days



=cut


use constant Days_16 => scalar('Days_16');


=head2 Days_17

17 Days



=cut


use constant Days_17 => scalar('Days_17');


=head2 Days_18

18 Days



=cut


use constant Days_18 => scalar('Days_18');


=head2 Days_19

19 Days



=cut


use constant Days_19 => scalar('Days_19');


=head2 Days_20

20 Days



=cut


use constant Days_20 => scalar('Days_20');


=head2 Days_21

21 Days



=cut


use constant Days_21 => scalar('Days_21');


=head2 Days_22

22 Days



=cut


use constant Days_22 => scalar('Days_22');


=head2 Days_23

23 Days



=cut


use constant Days_23 => scalar('Days_23');


=head2 Days_24

24 Days



=cut


use constant Days_24 => scalar('Days_24');


=head2 Days_25

25 Days



=cut


use constant Days_25 => scalar('Days_25');


=head2 Days_26

26 Days



=cut


use constant Days_26 => scalar('Days_26');


=head2 Days_27

27 Days



=cut


use constant Days_27 => scalar('Days_27');


=head2 Days_28

28 Days



=cut


use constant Days_28 => scalar('Days_28');


=head2 Days_29

29 Days



=cut


use constant Days_29 => scalar('Days_29');


=head2 Days_30

30 Days



=cut


use constant Days_30 => scalar('Days_30');


=head2 Days_31

31 Days



=cut


use constant Days_31 => scalar('Days_31');


=head2 Days_32

32 Days



=cut


use constant Days_32 => scalar('Days_32');


=head2 Days_33

33 Days



=cut


use constant Days_33 => scalar('Days_33');


=head2 Days_34

34 Days



=cut


use constant Days_34 => scalar('Days_34');


=head2 Days_35

35 Days



=cut


use constant Days_35 => scalar('Days_35');


=head2 Days_36

36 Days



=cut


use constant Days_36 => scalar('Days_36');


=head2 Days_37

37 Days



=cut


use constant Days_37 => scalar('Days_37');


=head2 Days_38

38 Days



=cut


use constant Days_38 => scalar('Days_38');


=head2 Days_39

39 Days



=cut


use constant Days_39 => scalar('Days_39');


=head2 Days_40

40 Days



=cut


use constant Days_40 => scalar('Days_40');


=head2 Days_41

41 Days



=cut


use constant Days_41 => scalar('Days_41');


=head2 Days_42

42 Days



=cut


use constant Days_42 => scalar('Days_42');


=head2 Days_43

43 Days



=cut


use constant Days_43 => scalar('Days_43');


=head2 Days_44

44 Days



=cut


use constant Days_44 => scalar('Days_44');


=head2 Days_45

45 Days



=cut


use constant Days_45 => scalar('Days_45');


=head2 Days_46

46 Days



=cut


use constant Days_46 => scalar('Days_46');


=head2 Days_47

47 Days



=cut


use constant Days_47 => scalar('Days_47');


=head2 Days_48

48 Days



=cut


use constant Days_48 => scalar('Days_48');


=head2 Days_49

49 Days



=cut


use constant Days_49 => scalar('Days_49');


=head2 Days_50

50 Days



=cut


use constant Days_50 => scalar('Days_50');


=head2 Lifetime

This duration will constitute that the related listing feature ought to be applicable for the complete duration of the listing.



=cut


use constant Lifetime => scalar('Lifetime');


=head2 CustomCode

(out) Reserved for internal or future use.



=cut


use constant CustomCode => scalar('CustomCode');







1;   
