#!/usr/bin/perl

package eBay::API::XML::DataType::Enum::NotificationEventStateCodeType;

use strict;
use warnings;  

##########################################################################
#
# Module: ............... <user defined location>eBay/API/XML
# File: ................. NotificationEventStateCodeType.pm
# Generated by: ......... genEBayApiDataTypes.pl
# Last Generated: ....... 08/24/2008 16:44
# API Release Number: ... 579
#
##########################################################################  

=head1 NAME

eBay::API::XML::DataType::Enum::NotificationEventStateCodeType

=head1 DESCRIPTION

Valid notification status codes



=head1 SYNOPSIS

=cut



=head1 Enums:

=cut


=head2 New

Status indicating the notification is newly created



=cut


use constant New => scalar('New');


=head2 Failed

Status indicating the notification was failed



=cut


use constant Failed => scalar('Failed');


=head2 MarkedDown

Status indicating the end user application is marked down



=cut


use constant MarkedDown => scalar('MarkedDown');


=head2 Pending

Status indicating the notification is pending



=cut


use constant Pending => scalar('Pending');


=head2 FailedPending

Status indicating the notification is failed pending



=cut


use constant FailedPending => scalar('FailedPending');


=head2 MarkedDownPending

Status indicating the notification is marked down pending



=cut


use constant MarkedDownPending => scalar('MarkedDownPending');


=head2 Delivered

Status indicating the notification was successfully delivered



=cut


use constant Delivered => scalar('Delivered');


=head2 Undeliverable

Status indicating the notification was unable to deliver



=cut


use constant Undeliverable => scalar('Undeliverable');


=head2 Rejected

Status indicating the notification was rejected



=cut


use constant Rejected => scalar('Rejected');


=head2 Canceled

Status indicating the notification was cancelled



=cut


use constant Canceled => scalar('Canceled');


=head2 CustomCode

Reserved for future internal or external use



=cut


use constant CustomCode => scalar('CustomCode');







1;   
