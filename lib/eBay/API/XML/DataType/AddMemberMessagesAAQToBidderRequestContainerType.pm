#!/usr/bin/perl

package eBay::API::XML::DataType::AddMemberMessagesAAQToBidderRequestContainerType;

use strict;
use warnings;  

##########################################################################
#
# Module: ............... <user defined location>eBay/API/XML
# File: ................. AddMemberMessagesAAQToBidderRequestContainerType.pm
# Generated by: ......... genEBayApiDataTypes.pl
# Last Generated: ....... 08/24/2008 16:44
# API Release Number: ... 579
#
##########################################################################  

=head1 NAME

eBay::API::XML::DataType::AddMemberMessagesAAQToBidderRequestContainerType

=head1 DESCRIPTION

Holds the content of the request.



=head1 SYNOPSIS

=cut


=head1 INHERITANCE

eBay::API::XML::DataType::AddMemberMessagesAAQToBidderRequestContainerType inherits from the L<eBay::API::XML::BaseDataType> class

=cut

use eBay::API::XML::BaseDataType;
our @ISA = ("eBay::API::XML::BaseDataType");

use eBay::API::XML::DataType::MemberMessageType;


my @gaProperties = ( [ 'CorrelationID', 'xs:string', '', '', '' ]
	, [ 'ItemID', 'xs:string', '', '', '' ]
	, [ 'MemberMessage', 'ns:MemberMessageType', ''
	     ,'eBay::API::XML::DataType::MemberMessageType', '1' ]
                    );
push @gaProperties, @{eBay::API::XML::BaseDataType::getPropertiesList()};

my @gaAttributes = ( 
                    );
push @gaAttributes, @{eBay::API::XML::BaseDataType::getAttributesList()};

=head1 Subroutines:

=cut

sub new {
  my $classname = shift;
  my %args = @_;
  my $self = $classname->SUPER::new(%args);
  return $self;
}

sub isScalar {
   return 0; 
}



=head2 setCorrelationID()

Use to track that a response is returned for every
request and to match particular responses to
particular requests.

  Calls: AddMemberMessagesAAQToBidder
  RequiredInput: Yes

#    Argument: 'xs:string'

=cut

sub setCorrelationID {
  my $self = shift;
  $self->{'CorrelationID'} = shift
}

=head2 getCorrelationID()

#    Returns: 'xs:string'

=cut

sub getCorrelationID {
  my $self = shift;
  return $self->{'CorrelationID'};
}


=head2 setItemID()

An eBay ID that uniquely identifies a given
item. Must be a currently active item.

MaxLength: 19 (Note: The eBay database specifies 38. Currently, Item IDs are usually 9 to 12 digits)

  Calls: AddMemberMessagesAAQToBidder
  RequiredInput: Yes

#    Argument: 'xs:string'

=cut

sub setItemID {
  my $self = shift;
  $self->{'ItemID'} = shift
}

=head2 getItemID()

#    Returns: 'xs:string'

=cut

sub getItemID {
  my $self = shift;
  return $self->{'ItemID'};
}


=head2 setMemberMessage()

Holds the content of the message.

  Calls: AddMemberMessagesAAQToBidder
  RequiredInput: Yes

#    Argument: 'ns:MemberMessageType'

=cut

sub setMemberMessage {
  my $self = shift;
  $self->{'MemberMessage'} = shift
}

=head2 getMemberMessage()

#    Returns: 'ns:MemberMessageType'

=cut

sub getMemberMessage {
  my $self = shift;
  return $self->_getDataTypeInstance( 'MemberMessage'
		,'eBay::API::XML::DataType::MemberMessageType');
}





##  Attribute and Property lists
sub getPropertiesList {
   my $self = shift;
   return \@gaProperties;
}

sub getAttributesList {
   my $self = shift;
   return \@gaAttributes;
}



1;   
