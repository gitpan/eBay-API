#!/usr/bin/perl

package eBay::API::XML::Call::GetReturnURL::GetReturnURLRequestType;

use strict;
use warnings;  

##########################################################################
#
# Module: ............... <user defined location>eBay/API/XML
# File: ................. GetReturnURLRequestType.pm
# Generated by: ......... genEBayApiDataTypes.pl
# Last Generated: ....... 07/07/2008 17:42
# API Release Number: ... 571
#
##########################################################################  

=head1 NAME

eBay::API::XML::Call::GetReturnURL::GetReturnURLRequestType

=head1 DESCRIPTION

Returns an application's authentication and authorization
preferences and related data, such as the URLs that eBay should redirect users to
after they complete the authentication and authorization process.
<br>
<br>
Unlike most other Trading API calls, this call requires the eBay
Username and Password values that you created for use by your applications.
(Most Trading API calls, in contrast, require an authentication token.)
These values are not described in the
current documentation topic. For more information about these values,
please use the Setup for Authentication link below.



=head1 SYNOPSIS

=cut


=head1 INHERITANCE

eBay::API::XML::Call::GetReturnURL::GetReturnURLRequestType inherits from the L<eBay::API::XML::RequestDataType> class

=cut

use eBay::API::XML::RequestDataType;
our @ISA = ("eBay::API::XML::RequestDataType");



my @gaProperties = ( 
                    );
push @gaProperties, @{eBay::API::XML::RequestDataType::getPropertiesList()};

my @gaAttributes = ( 
                    );
push @gaAttributes, @{eBay::API::XML::RequestDataType::getAttributesList()};

=head1 Subroutines:

=cut

sub new {
  my $classname = shift;
  my %args = @_;
  my $self = $classname->SUPER::new(%args);
  return $self;
}

sub isScalar {
   return 0; 
}






##  Attribute and Property lists
sub getPropertiesList {
   my $self = shift;
   return \@gaProperties;
}

sub getAttributesList {
   my $self = shift;
   return \@gaAttributes;
}



1;   
