#!/usr/bin/perl

package eBay::API::XML::Call::GetPromotionalSaleDetails::GetPromotionalSaleDetailsResponseType;

use strict;
use warnings;  

##########################################################################
#
# Module: ............... <user defined location>eBay/API/XML
# File: ................. GetPromotionalSaleDetailsResponseType.pm
# Generated by: ......... genEBayApiDataTypes.pl
# Last Generated: ....... 08/24/2008 16:44
# API Release Number: ... 579
#
##########################################################################  

=head1 NAME

eBay::API::XML::Call::GetPromotionalSaleDetails::GetPromotionalSaleDetailsResponseType

=head1 DESCRIPTION

Contains information about promotional sales. This call
is part of the Promotional Price Display feature.



=head1 SYNOPSIS

=cut


=head1 INHERITANCE

eBay::API::XML::Call::GetPromotionalSaleDetails::GetPromotionalSaleDetailsResponseType inherits from the L<eBay::API::XML::ResponseDataType> class

=cut

use eBay::API::XML::ResponseDataType;
our @ISA = ("eBay::API::XML::ResponseDataType");

use eBay::API::XML::DataType::PromotionalSaleArrayType;


my @gaProperties = ( [ 'PromotionalSaleDetails', 'ns:PromotionalSaleArrayType', ''
	     ,'eBay::API::XML::DataType::PromotionalSaleArrayType', '1' ]
                    );
push @gaProperties, @{eBay::API::XML::ResponseDataType::getPropertiesList()};

my @gaAttributes = ( 
                    );
push @gaAttributes, @{eBay::API::XML::ResponseDataType::getAttributesList()};

=head1 Subroutines:

=cut

sub new {
  my $classname = shift;
  my %args = @_;
  my $self = $classname->SUPER::new(%args);
  return $self;
}

sub isScalar {
   return 0; 
}



=head2 setPromotionalSaleDetails()

Contains information about a promotional sale or sales. If you did not 
specify a PromotionalSaleID in the request, then all promotional sales
for the seller are returned. Promotional sales enable sellers to add 
discounts and/or free shipping to items.

#    Argument: 'ns:PromotionalSaleArrayType'

=cut

sub setPromotionalSaleDetails {
  my $self = shift;
  $self->{'PromotionalSaleDetails'} = shift
}

=head2 getPromotionalSaleDetails()

  Returned: Conditionally
#    Returns: 'ns:PromotionalSaleArrayType'

=cut

sub getPromotionalSaleDetails {
  my $self = shift;
  return $self->_getDataTypeInstance( 'PromotionalSaleDetails'
		,'eBay::API::XML::DataType::PromotionalSaleArrayType');
}





##  Attribute and Property lists
sub getPropertiesList {
   my $self = shift;
   return \@gaProperties;
}

sub getAttributesList {
   my $self = shift;
   return \@gaAttributes;
}



1;   
