#!/usr/bin/perl

package eBay::API::XML::Call::ReviseLiveAuctionItem::ReviseLiveAuctionItemRequestType;

use strict;
use warnings;  

##########################################################################
#
# Module: ............... <user defined location>eBay/API/XML
# File: ................. ReviseLiveAuctionItemRequestType.pm
# Generated by: ......... genEBayApiDataTypes.pl
# Last Generated: ....... 08/24/2008 16:44
# API Release Number: ... 579
#
##########################################################################  

=head1 NAME

eBay::API::XML::Call::ReviseLiveAuctionItem::ReviseLiveAuctionItemRequestType

=head1 DESCRIPTION

Enables a seller to make changes to the definition of an active item
listing that listed for the Live Auction.



=head1 SYNOPSIS

=cut


=head1 INHERITANCE

eBay::API::XML::Call::ReviseLiveAuctionItem::ReviseLiveAuctionItemRequestType inherits from the L<eBay::API::XML::RequestDataType> class

=cut

use eBay::API::XML::RequestDataType;
our @ISA = ("eBay::API::XML::RequestDataType");

use eBay::API::XML::DataType::ItemType;


my @gaProperties = ( [ 'DeletedField', 'xs:string', '1', '', '' ]
	, [ 'Item', 'ns:ItemType', ''
	     ,'eBay::API::XML::DataType::ItemType', '1' ]
                    );
push @gaProperties, @{eBay::API::XML::RequestDataType::getPropertiesList()};

my @gaAttributes = ( 
                    );
push @gaAttributes, @{eBay::API::XML::RequestDataType::getAttributesList()};

=head1 Subroutines:

=cut

sub new {
  my $classname = shift;
  my %args = @_;
  my $self = $classname->SUPER::new(%args);
  return $self;
}

sub isScalar {
   return 0; 
}



=head2 setDeletedField()

Reserved for future use.

  RequiredInput: No
#    Argument: reference to an array  
                      of 'xs:string'

=cut

sub setDeletedField {
  my $self = shift;
  $self->{'DeletedField'} = 
		$self->convertArray_To_RefToArrayIfNeeded(@_);
}

=head2 getDeletedField()

#    Returns: reference to an array  
                      of 'xs:string'

=cut

sub getDeletedField {
  my $self = shift;
  return $self->_getDataTypeArray('DeletedField');
}


=head2 setItem()

Child elements hold the values for properties that are changing.
The Item.ID property must always be set to the ID of the listing
being changed. Set other fields in the Item object only for those
properties that are changing.

  RequiredInput: Yes
#    Argument: 'ns:ItemType'

=cut

sub setItem {
  my $self = shift;
  $self->{'Item'} = shift
}

=head2 getItem()

#    Returns: 'ns:ItemType'

=cut

sub getItem {
  my $self = shift;
  return $self->_getDataTypeInstance( 'Item'
		,'eBay::API::XML::DataType::ItemType');
}





##  Attribute and Property lists
sub getPropertiesList {
   my $self = shift;
   return \@gaProperties;
}

sub getAttributesList {
   my $self = shift;
   return \@gaAttributes;
}



1;   
