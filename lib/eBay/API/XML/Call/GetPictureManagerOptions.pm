#!/usr/bin/perl

package eBay::API::XML::Call::GetPictureManagerOptions;

use strict;
use warnings;  

##########################################################################
#
# Module: ............... <user defined location>eBay/API/XML
# File: ................. GetPictureManagerOptions.pm
# Generated by: ......... genEBayApiDataTypes.pl
# Last Generated: ....... 08/24/2008 16:44
# API Release Number: ... 579
#
##########################################################################  

=head1 NAME

eBay::API::XML::Call::GetPictureManagerOptions

=head1 DESCRIPTION



=head1 SYNOPSIS

=cut


=head1 INHERITANCE

eBay::API::XML::Call::GetPictureManagerOptions inherits from the L<eBay::API::XML::BaseCall> class

=cut

use eBay::API::XML::BaseCall;
our @ISA = ("eBay::API::XML::BaseCall");

use eBay::API::XML::Call::GetPictureManagerOptions::GetPictureManagerOptionsRequestType;
use eBay::API::XML::Call::GetPictureManagerOptions::GetPictureManagerOptionsResponseType;


=head1 Subroutines:

=cut

sub getApiCallName {
   return 'GetPictureManagerOptions';
}
sub getRequestDataTypeFullPackage {
   return 'eBay::API::XML::Call::GetPictureManagerOptions::GetPictureManagerOptionsRequestType';
}
sub getResponseDataTypeFullPackage {
   return 'eBay::API::XML::Call::GetPictureManagerOptions::GetPictureManagerOptionsResponseType';
}

#
# input properties
#



#
# output properties
#

=head2 getPictureType()

A global definition for displaying pictures, with a maximum size.

  Returned: Always
#    Returns: reference to an array  
                      of 'ns:PictureManagerPictureDisplayType'

=cut
       
sub getPictureType {
   my $self = shift;
   return $self->getResponseDataType()->getPictureType();
}

=head2 getSubscription()

A type of Picture Manager subscription, with a subscription level, fee,
and allowed storage size.

  Returned: Always
#    Returns: reference to an array  
                      of 'ns:PictureManagerSubscriptionType'

=cut
       
sub getSubscription {
   my $self = shift;
   return $self->getResponseDataType()->getSubscription();
}





1;   
