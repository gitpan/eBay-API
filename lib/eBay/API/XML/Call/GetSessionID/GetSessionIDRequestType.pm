#!/usr/bin/perl

package eBay::API::XML::Call::GetSessionID::GetSessionIDRequestType;

use strict;
use warnings;  

##########################################################################
#
# Module: ............... <user defined location>eBay/API/XML
# File: ................. GetSessionIDRequestType.pm
# Generated by: ......... genEBayApiDataTypes.pl
# Last Generated: ....... 08/24/2008 16:44
# API Release Number: ... 579
#
##########################################################################  

=head1 NAME

eBay::API::XML::Call::GetSessionID::GetSessionIDRequestType

=head1 DESCRIPTION

Request for a SessionID, which is a unique identifier for authenticating data entry during the process that creates a user token.



=head1 SYNOPSIS

=cut


=head1 INHERITANCE

eBay::API::XML::Call::GetSessionID::GetSessionIDRequestType inherits from the L<eBay::API::XML::RequestDataType> class

=cut

use eBay::API::XML::RequestDataType;
our @ISA = ("eBay::API::XML::RequestDataType");



my @gaProperties = ( [ 'RuName', 'xs:string', '', '', '' ]
                    );
push @gaProperties, @{eBay::API::XML::RequestDataType::getPropertiesList()};

my @gaAttributes = ( 
                    );
push @gaAttributes, @{eBay::API::XML::RequestDataType::getAttributesList()};

=head1 Subroutines:

=cut

sub new {
  my $classname = shift;
  my %args = @_;
  my $self = $classname->SUPER::new(%args);
  return $self;
}

sub isScalar {
   return 0; 
}



=head2 setRuName()

The runame provided must match the one that will be used for validation
during the creation of a user token.

  RequiredInput: Yes
#    Argument: 'xs:string'

=cut

sub setRuName {
  my $self = shift;
  $self->{'RuName'} = shift
}

=head2 getRuName()

#    Returns: 'xs:string'

=cut

sub getRuName {
  my $self = shift;
  return $self->{'RuName'};
}





##  Attribute and Property lists
sub getPropertiesList {
   my $self = shift;
   return \@gaProperties;
}

sub getAttributesList {
   my $self = shift;
   return \@gaAttributes;
}



1;   
